<titanium.solar.libs.analyze.filters.FilterProviderConcatenate>
	<filterProviders>
		<titanium.solar.libs.analyze.filters.FilterProviderCorrelation>
			<waveformProvider
				class="titanium.solar.libs.analyze.waveformproviders.WaveformProviderLinkFile">
				<file>waveform.csv</file>
			</waveformProvider>
			<hotspot>5</hotspot>
		</titanium.solar.libs.analyze.filters.FilterProviderCorrelation>
		<titanium.solar.libs.analyze.filters.FilterProviderContinuous>
			<offsetShort>45</offsetShort>
			<offsetLong>80</offsetLong>
		</titanium.solar.libs.analyze.filters.FilterProviderContinuous>
		<titanium.solar.libs.analyze.filters.FilterProviderQOM />
		<titanium.solar.libs.analyze.filters.FilterProviderMul>
			<x>0.02</x>
		</titanium.solar.libs.analyze.filters.FilterProviderMul>
		<titanium.solar.libs.analyze.filters.FilterProviderExtractMountain>
			<width>7</width>
			<threshold>10.0</threshold>
			<timeout>100</timeout>
			<mountainListenerPrioviders>
				<titanium.solar.libs.analyze.mountainlisteners.MountainListenerProviderChain>
					<offsetShort>45</offsetShort>
					<offsetLong>80</offsetLong>
					<firstThreshold>30</firstThreshold>
					<timeout>100</timeout>
					<maxXError>10</maxXError>
					<chainListenersPrioviders>
						<titanium.solar.core.recorder.dynamicanalyze.ChainListenerProviderStdout>
							<samplesPerSecond>44100.0</samplesPerSecond>
						</titanium.solar.core.recorder.dynamicanalyze.ChainListenerProviderStdout>
						<titanium.solar.core.recorder.dynamicanalyze.ChainListenerProviderWeb>
							<samplesPerSecond>44100.0</samplesPerSecond>
							<host>0.0.0.0</host>
							<port>8080</port>
							<backlog>10</backlog>
							<webSocketPort>8081</webSocketPort>
							<useSynchronizer>false</useSynchronizer>
							<useDebugSignal>false</useDebugSignal>
						</titanium.solar.core.recorder.dynamicanalyze.ChainListenerProviderWeb>
					</chainListenersPrioviders>
				</titanium.solar.libs.analyze.mountainlisteners.MountainListenerProviderChain>
			</mountainListenerPrioviders>
		</titanium.solar.libs.analyze.filters.FilterProviderExtractMountain>
	</filterProviders>
</titanium.solar.libs.analyze.filters.FilterProviderConcatenate>
